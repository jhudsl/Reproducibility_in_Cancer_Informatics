
# This code was originally written by Josh Shapiro and Candace Savonen
# for the Childhood Cancer Data Lab, an initiative of Alexs Lemonade Stand Foundation.
# https://github.com/AlexsLemonade/refinebio-examples/blob/33cdeff66d57f9fe8ee4fcb5156aea4ac2dce07f/.github/workflows/style-and-sp-check.yml#L1

# Adapted for this jhudsl repository by Candace Savonen Apr 2021

name: Render Bookdown and Coursera

# Controls when the action will run. Triggers the workflow on push
# events only for the master branch
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**.Rmd'
      - docker/*
      - assets/*
jobs:
  # This workflow contains a single job called "build-all"
  render-main:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2
        with:
          # get the full repo
          fetch-depth: 0
          # use github PAT
          token: ${{ secrets.GH_PAT }}

###### If you will be making changes to the Docker image to make specific to the
###### course, then highlight this chunk and uncomment it. #####################
###### Recommend using short cut -- Command and / works for some editors.#######
###### START OF DOCKER UPDATE CHUNK
      # # Login to Dockerhub
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      #
      # # Set up Docker build
      # - name: Set up Docker Build
      #   uses: docker/setup-buildx-action@v1
      #
      # - name: Get Token
      #   run: echo ${{ secrets.GH_PAT }} > docker/git_token.txt
      #
      # # Build docker image
      # - name: Build Docker image
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: false
      #     load: true
      #     context: docker
      #     file: docker/Dockerfile
      #     tags: jhudsl/course_template
      #
      # # Push the Docker image
      # - name: Push Docker image
      #   run: docker push jhudsl/course_template

###### END OF DOCKER UPDATE CHUNK ##############################################

      # We want a fresh run of the renders each time
      - name: Delete old docs/*
        run: rm -r docs/*

      # Run bookdown rendering
      - name: Run bookdown render
        id: bookdown
        run: |
          docker run \
          --mount type=bind,target=/home/rstudio,source=$PWD \
          --user "$(id -u):$(id -g)" \
          jhudsl/course_template \
          Rscript -e "bookdown::render_book('index.Rmd', output_format = 'all');
          file.copy(from = 'assets', to = 'docs/assets', overwrite = TRUE)"

##### If you do not wish to host your course on Coursera, you can delete this section #####
      # Run Coursera version
      - name: Run Coursera version of render
        id: coursera
        run: |
          docker run \
          --mount type=bind,target=/home/rstudio,source=$PWD \
          --user "$(id -u):$(id -g)" \
          jhudsl/course_template \
          Rscript -e "ottr::render_coursera()"

##### End of Coursera rendering section ########################################

      # This checks on the steps before it and makes sure that they completed.
      # If the renders didn't complete we don't want to commit the file changes
      - name: Check on render steps
        if: steps.bookdown.outcome != 'success' || steps.coursera.outcome != 'success'
        run: |
          echo Bookdown status ${{steps.bookdown.outcome}}
          echo Coursera status ${{steps.coursera.outcome}}
          exit 1

      # Commit the rendered bookdown files
      - name: Commit rendered bookdown files
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add --force docs/*
          git commit -m 'Render bookdown' || echo "No changes to commit"
          git push origin main || echo "No changes to push"
