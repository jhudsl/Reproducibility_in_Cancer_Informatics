# Candace Savonen Apr 2021

name: Render Preview

# Controls when the action will run. Triggers the workflow on pull request to main branch
on:
  pull_request:
    branches: [ main ]

permissions: write-all

jobs:
  # This workflow contains a single job called "build-all"
  render-preview:
    runs-on: ubuntu-latest
    container:
      image: jhudsl/course_template
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Set up git checkout
      - name: Set up git checkout
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          exists=$(git ls-remote https://${{ secrets.GH_PAT }}@github.com/$GITHUB_REPOSITORY $branch_name | wc -l | xargs)
          if [[ $exists == 0 ]];then
            echo branch doesnt exist
            git checkout -b $branch_name
            git push --set-upstream origin $branch_name
          else
            echo branch does exist
            git fetch --all
            git checkout $branch_name
            git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }}
          fi

          rm -r docs/*
        shell: bash

      # Run bookdown rendering
      - name: Run bookdown render
        id: bookdown
        run: Rscript -e "bookdown::render_book('index.Rmd', output_format = 'all')"

##### If you do not wish to host your course on Coursera, you can delete this section #####
      # Run Coursera version
      - name: Run Coursera version of render
        id: coursera
        run: Rscript -e "ottr::render_coursera()"

##### End of Coursera rendering section ########################################

      # This checks on the steps before it and makes sure that they completed.
      # If the renders didn't complete we don't want to commit the file changes
      - name: Check on render steps
        if: steps.bookdown.outcome != 'success' || steps.coursera.outcome != 'success'
        run: |
          echo Bookdown status ${{steps.bookdown.outcome}}
          echo Coursera status ${{steps.coursera.outcome}}
          exit 1

      # Commit the rendered bookdown files
      - name: Commit rendered bookdown files to preview branch
        id: commit
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          git diff --name-only origin/main -- docs >/dev/null && changes=true || changes=false
          echo $changes
          if $changes == true; then
            echo ::set-output name=changes::$(echo 'changes')
            git diff --name-only origin/$branch_name -- docs/ >/dev/null && changes=true || changes=false
            echo $changes
            if $changes == true; then
              git add . --force
              git commit -m 'Render bookdown preview'
              git pull --set-upstream origin $branch_name --allow-unrelated-histories
              git push
            fi
          fi
        shell: bash

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: latest commit

      - name: Build components of the comment
        id: build-components
        run: |
          course_name=$(head -n 1 _bookdown.yml | cut -d'"' -f 2| tr " " "-")
          bookdown_link=$(echo "https://htmlpreview.github.io/?https://raw.githubusercontent.com/$GITHUB_REPOSITORY/preview-${{ github.event.pull_request.number }}/docs/index.html")
          coursera_link=$(echo "https://htmlpreview.github.io/?https://raw.githubusercontent.com/$GITHUB_REPOSITORY/preview-${{ github.event.pull_request.number }}/docs/coursera/index.html")
          docx_link=$(echo "https://github.com/$GITHUB_REPOSITORY/raw/preview-${{ github.event.pull_request.number }}/docs/$course_name.docx")
          echo ::set-output name=bookdown_link::$bookdown_link
          echo ::set-output name=coursera_link::$coursera_link
          echo ::set-output name=docx_link::$docx_link
          echo ::set-output name=time::$(date +'%Y-%m-%d')
          echo ::set-output name=commit_id::$GITHUB_SHA
          echo ${{steps.commit.outputs.changes}}

      - name: Create or update comment
        if: steps.commit.outputs.changes == 'changes'
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Re-rendered previews from the latest commit:
            - See [preview of Bookdown here](${{ steps.build-components.outputs.bookdown_link }})
            - See [preview of Coursera version here](${{ steps.build-components.outputs.coursera_link }})
            - Download the [preview of .docx file](${{ steps.build-components.outputs.docx_link }})

            _Updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

      - name: No comment if no changes
        if: steps.commit.outputs.changes == 'no_changes'
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            The latest commit did not produce rendering changes.

            _Updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace
