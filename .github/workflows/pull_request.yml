# Candace Savonen Dec 2021

name: Pull Request

on:
  pull_request:
    branches: [ main, staging ]

jobs:

  yaml-check:
    name: Load user automation choices
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

        # Use the yaml-env-action action.
      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: config_automation.yml # Pass a space-separated list of configuration files. Rightmost files take precedence.

      - name: Verify Dockerfiles changed?
        uses: tj-actions/verify-changed-files@v8.8
        id: verify-changed-files
        with:
          files: |
             docker/Dockerfile
             docker/github_package_list.tsv

      - name: Make branch if it doesn't exist
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          exists=$(git ls-remote https://${{ secrets.GH_PAT }}@github.com/$GITHUB_REPOSITORY $branch_name | wc -l | xargs)
          if [[ $exists == 0 ]];then
            echo branch doesnt exist
            git checkout -b $branch_name || echo branch exists
            git push --set-upstream origin $branch_name
          else
            echo branch does exist
          fi
        shell: bash

    outputs:
      toggle_spell_check: "${{ env.SPELL_CHECK }}"
      toggle_style_code: "${{ env.STYLE_CODE }}"
      toggle_url_check: "${{ env.URL_CHECKER }}"
      toggle_quiz_check: "${{ env.CHECK_QUIZZES }}"
      toggle_render_preview: "${{ env.RENDER_PREVIEW }}"
      toggle_docker_build: "${{ env.DOCKER_BUILD }}"
      rendering_docker_image: "${{ env.RENDERING_DOCKER_IMAGE }}"
      dockerfiles_changed: steps.verify-changed-files.outputs.files_changed

  spell-check:
    name: Check spelling
    needs: yaml-check
    runs-on: ubuntu-latest
    if: ${{needs.yaml-check.outputs.toggle_spell_check == 'yes'}}
    container:
      image: jhudsl/course_template:main

    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          git fetch --all
          git checkout $branch_name
          git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }}
        shell: bash

      - name: Run spell check
        id: spell_check_run
        run: |
          results=$(Rscript "scripts/spell-check.R")
          echo "::set-output name=sp_chk_results::$results"

      - name: Archive spelling errors
        if: ${{ steps.spell_check_run.outputs.sp_chk_results > 0 }}
        uses: actions/upload-artifact@v2
        with:
          name: spell-check-results
          path: resources/spell_check_results.tsv

      - name: Commit spell check errors
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          git add --force resources/spell_check_results.tsv || echo "No changes to commit"
          git commit -m 'Add spell check file' || echo "No changes to commit"
          git pull --set-upstream origin $branch_name --allow-unrelated-histories --strategy-option=ours
          git push --force origin $branch_name || echo "No changes to commit"

      - name: Build components of the spell check comment
        id: build-components
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          sp_error_url=https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/$branch_name/resources/spell_check_results.tsv
          echo ::set-output name=time::$(date +'%Y-%m-%d')
          echo ::set-output name=commit_id::$GITHUB_SHA
          echo ::set-output name=sp_error_url::$sp_error_url

      # Handle the commenting
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: spelling errors

      - name: Spelling errors!
        if: ${{ steps.spell_check_run.outputs.sp_chk_results >= 3 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            :warning: There are spelling errors that need to be addressed. [Read this guide for more info](https://github.com/jhudsl/OTTR_Template/wiki/Spell-check).
            [Download the errors here.](${{ steps.build-components.outputs.sp_error_url }})
            _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

      - name: Check spell check results - fail if too many errors
        if: ${{ steps.spell_check_run.outputs.sp_chk_results >= 3 }}
        run: exit 1

      - name: No spelling errors
        if: ${{ steps.spell_check_run.outputs.sp_chk_results < 3 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            No spelling errors! :tada:
            _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

  style-code:
    name: Style code
    needs: yaml-check
    runs-on: ubuntu-latest
    if: ${{needs.yaml-check.outputs.toggle_style_code == 'yes'}}
    container:
      image: jhudsl/course_template:main

    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run styler
        run: Rscript -e "styler::style_file(list.files(pattern = 'Rmd$', recursive = TRUE, full.names = TRUE));warnings()"

      - name: Commit styled files
        run: |
          git add \*.Rmd
          git commit -m 'Style Rmds' || echo "No changes to commit"
          git push origin || echo "No changes to commit"

  url-check:
    name: Check URLs
    needs: yaml-check
    runs-on: ubuntu-latest
    if: ${{needs.yaml-check.outputs.toggle_url_check == 'yes'}}

    steps:
    - name: checkout repo
      uses: actions/checkout@v2

    - name: Login as jhudsl-robot
      run: |
        git config --local user.email "itcrtrainingnetwork@gmail.com"
        git config --local user.name "jhudsl-robot"

    - name: URLs-checker
      uses: urlstechie/urlchecker-action@master
      with:
        # Delete the cloned repository after running URLchecked (default is false)
        cleanup: true

        # A comma-separated list of file types to cover in the URL checks
        file_types: .Rmd,.md

        # Choose whether to include file with no URLs in the prints.
        print_all: false

        # A comma separated links to exclude during URL checks
        exclude_urls: https://jhudatascience.org/{Course_Name}}

        # choose if the force pass or not
        force_pass : true

  check-quizzes:
    name: Check Leanpub quizzes
    needs: yaml-check
    runs-on: ubuntu-latest
    container:
      image: jhudsl/course_template:main
    if: ${{needs.yaml-check.outputs.toggle_quiz_check == 'yes'}}
    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          git fetch --all
          git checkout $branch_name
          git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }}
        shell: bash

      - name: Run quiz check
        id: quiz_check_run
        run: |
          Rscript -e "ottrpal::check_quizzes(quiz_dir = 'quizzes', write_report = TRUE, verbose = TRUE)"
          results=0
          if -f "question_error_report.tsv"; then
            results=$(wc -l < question_error_report.tsv >/dev/null)
          fi
          echo ::set-output name=quiz_chk_results::$results

      - name: Commit quiz check errors
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          git add --force question_error_report.tsv || echo "No changes to commit"
          git commit -m 'Add question error report file' || echo "No changes to commit"
          git pull --set-upstream origin $branch_name --allow-unrelated-histories --strategy-option=ours
          git push origin $branch_name || echo "No changes to commit"

      - name: Build components of the quiz check comment
        id: build-components
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          quiz_error_url=https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/$branch_name/question_error_report.tsv
          echo ::set-output name=time::$(date +'%Y-%m-%d')
          echo ::set-output name=commit_id::$GITHUB_SHA
          echo ::set-output name=quiz_error_url::$quiz_error_url

      # Handle the commenting
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: quiz errors

      - name: Quiz errors!
        if: ${{ steps.quiz_check_run.outputs.quiz_chk_results >= 2 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            :warning: There are quiz errors that need to be addressed. [Read this guide for more info](https://github.com/jhudsl/OTTR_Template/wiki/Publishing-on-Leanpub#setting-up-quizzes).
            [Download the errors here.](${{ steps.build-components.outputs.quiz_error_url }})
            _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

      - name: Check quiz check results - fail if too many errors
        if: ${{ steps.quiz_check_run.outputs.quiz_chk_results >= 2 }}
        run: exit 1

      - name: No quiz errors
        if: ${{ steps.quiz_check_run.outputs.quiz_chk_results < 2 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            No quiz errors detected! :tada:
            _Comment updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

  render-preview:
    name: Render preview
    needs: yaml-check
    runs-on: ubuntu-latest
    container:
      image: ${{needs.yaml-check.outputs.rendering_docker_image}}
    if: ${{needs.yaml-check.outputs.toggle_render_preview == 'yes'}}

    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Set up git checkout
      - name: Set up git checkout
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"

          branch_name='preview-${{ github.event.pull_request.number }}'
          git fetch --all
          git checkout $branch_name
          git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }}
        shell: bash

      # Run bookdown rendering
      - name: Run bookdown render
        id: bookdown
        run: Rscript -e "bookdown::render_book('index.Rmd', output_format = 'all')"

      # Run TOC-less version
      # Rendered content for Leanpub and Coursera is very similar.
      # This job creates a shared scaffold for both.
      - name: Run TOC-less version of render
        id: tocless
        run: Rscript -e "ottrpal::render_without_toc()"

      # This checks on the steps before it and makes sure that they completed.
      # If the renders didn't complete we don't want to commit the file changes
      - name: Check on render steps
        if: steps.bookdown.outcome != 'success' || steps.tocless.outcome != 'success'
        run: |
          echo Bookdown status ${{steps.bookdown.outcome}}
          echo Toc-less status ${{steps.tocless.outcome}}
          exit 1

      # Commit the rendered bookdown files
      - name: Commit rendered bookdown files to preview branch
        id: commit
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          git diff origin/main -- docs >/dev/null && changes=true || changes=false
          echo ::set-output name=changes::$changes
          git add . --force
          git commit -m 'Render preview' || echo "No changes to commit"
          git pull --set-upstream origin $branch_name --allow-unrelated-histories --strategy-option=ours
          git push --force || echo "No changes to commit"
        shell: bash

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: latest commit

      - name: Build components of the comment
        id: build-components
        run: |
          course_name=$(head -n 1 _bookdown.yml | cut -d'"' -f 2| tr " " "-")
          bookdown_link=$(echo "https://htmlpreview.github.io/?https://raw.githubusercontent.com/$GITHUB_REPOSITORY/preview-${{ github.event.pull_request.number }}/docs/index.html")
          tocless_link=$(echo "https://htmlpreview.github.io/?https://raw.githubusercontent.com/$GITHUB_REPOSITORY/preview-${{ github.event.pull_request.number }}/docs/no_toc/index.html")
          docx_link=$(echo "https://github.com/$GITHUB_REPOSITORY/raw/preview-${{ github.event.pull_request.number }}/docs/$course_name.docx")
          echo ::set-output name=bookdown_link::$bookdown_link
          echo ::set-output name=tocless_link::$tocless_link
          echo ::set-output name=docx_link::$docx_link
          echo ::set-output name=time::$(date +'%Y-%m-%d')
          echo ::set-output name=commit_id::$GITHUB_SHA
          echo ${{steps.commit.outputs.changes}}

      - name: Create or update comment
        if: steps.commit.outputs.changes == 'true'
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Re-rendered previews from the latest commit:
            - See [preview of Bookdown here](${{ steps.build-components.outputs.bookdown_link }})
            - See [preview of Coursera/Leanpub version here](${{ steps.build-components.outputs.tocless_link }})
            - Download the [preview of .docx file](${{ steps.build-components.outputs.docx_link }})

            _Updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

      - name: Comment if no changes
        if: steps.commit.outputs.changes == 'false'
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            The latest commit did not produce rendering changes.

            _Updated at ${{ steps.build-components.outputs.time }} with changes from ${{ steps.build-components.outputs.commit_id }}_
          edit-mode: replace

  build-docker:
    name: Build Docker image
    needs: yaml-check
    runs-on: ubuntu-latest
    if: ${{needs.yaml-check.outputs.toggle_docker_build == 'yes' && needs.yaml-check.outputs.dockerfiles_changed == 'true' && github.head_ref != 'repo-sync/OTTR_Template/default'}}

    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Verify Dockerfiles changed?
        uses: tj-actions/verify-changed-files@v8.8
        id: verify-changed-files
        with:
          files: |
             docker/Dockerfile
             docker/github_package_list.tsv

      - name: Login as jhudsl-robot
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"

      # Set up Docker build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Setup layer cache
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Get token
        run: echo ${{ secrets.GH_PAT }} > docker/git_token.txt

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          context: docker
          file: docker/Dockerfile
          tags: jhudsl/course_template
